# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
#  codecov: codecov/codecov@3.2.4
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:17.0
      - image: circleci/mysql:8.0.3
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: character
          MYSQL_USER: USER2
          MYSQL_PASSWORD: USER2
    working_directory: ~/temp
    steps:
      - checkout
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL CLI; Import dummy data; run an example query
          command: |
            sudo apt-get update && sudo apt-get install default-mysql-client 
            mysql -h 127.0.0.1 -u USER2 -USER2 character
#            mysql -h 127.0.0.1 -u USER2 -USER2 test_db < sql-data/dummy.sql
#      - run:
#          name: Wait for Database Connection
#          # preinstalled in circleci/* docker image
#          command: docker-compose -f docker-compose.yml up
##          command: dockerize -wait tcp://localhost:3306 -timeout 1m
    #install mysql client
#      - run: sudo apt-get install mysql-client
    # create databases
#      - run: mysql -h 127.0.0.1 -u root -e "create database character"
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#    steps:
      # Checkout the code as the first step.
#      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
#  checkout:
#    steps:
#      - checkout
#  codecov/upload:

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
#  upload-to-codecov:
#    jobs:
#      - checkout
#      - codecov/upload